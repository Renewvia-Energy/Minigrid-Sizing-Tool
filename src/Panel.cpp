#include <cassert>
#include <iostream>

class Panel {
	private:
		const double Pmp;
		const double Voc;
		const double Vmp;
		const double Isc;
		const double Imp;
		const double price;

	public:
		/**
		* A PV panel. All specifications given for standard operating conditions (SOC).
		*
		* @param {number} Pmp - Maximum power [W].
		* @param {number} Voc - Open-circuit voltage [V].
		* @param {number} Vmp - Maximum-power voltage [V].
		* @param {number} Isc - Short-circuit current [A].
		* @param {number} Imp - Maximum-power current [A].
		* @param {number} price - Unit price of one panel [$].
		* @constructor
		*/
		Panel(double Pmp, double Voc, double Vmp, double Isc, double Imp, double price) : Pmp(Pmp), Voc(Voc), Vmp(Vmp), Isc(Isc), Imp(Imp), price(price) {}

		Panel copy() const {
			return *this;
		}

		// Getters
		double getPmp() const { return Pmp; }
		double getVoc() const { return Voc; }
		double getVmp() const { return Vmp; }
		double getIsc() const { return Isc; }
		double getImp() const { return Imp; }
		double getPrice() const { return price; }
 	
		/**
		 * Compute the amount of energy produced in one unit of time.
		 *
		 * @param {double} dcArrayOutputWhPerWp - Amount of energy [Wh] a 1-Wp panel could output during the time interval.
		 * @returns {double} Amount of energy [Wh] produced by the panel over the time interval.
		 */
		double getEnergy(double dcArrayOutputWhPerWp) const {
			double energy = dcArrayOutputWhPerWp*Pmp;
			assert(energy>=0 && "Energy generated by panel should be nonnegative.");
			return energy;
		}
};